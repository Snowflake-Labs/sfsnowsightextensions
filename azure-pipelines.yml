trigger:
- master

pool:
  vmImage: windows-latest

steps:
- task: gitversion/setup@1
  inputs:
    versionSpec: '5.x'
- task: gitversion/execute@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)'
    useConfigFile: true
    configFilePath: 'gitversion.yml'
- task: PowerShell@2
  inputs:
    targetType: 'inLine'
    script: |
      Write-Host "Versioning started"
      "Sources directory " + $Env:BUILD_SOURCESDIRECTORY
      "Build number " + $Env:BUILD_BUILDNUMBER
      $csprojfilename = $Env:BUILD_SOURCESDIRECTORY+"\SnowflakePS.csproj"
      "Project file to update " + $csprojfilename
      [xml]$csprojcontents = Get-Content -Path $csprojfilename;
      "Current version number is" + $csprojcontents.Project.PropertyGroup.Version
      $oldversionNumber = $csprojcontents.Project.PropertyGroup.Version
      $csprojcontents.Project.PropertyGroup.Version = $Env:BUILD_BUILDNUMBER
      $csprojcontents.Save($csprojfilename)
      "Version number has been udated from " + $oldversionNumber + " to " + $Env:BUILD_BUILDNUMBER
      Write-Host "Finished"
- task: PowerShell@2
  inputs:
    targetType: 'inLine'
    script: |
      Write-Host "Versioning started"
      "Sources directory " + $Env:BUILD_SOURCESDIRECTORY
      "Build number " + $Env:BUILD_BUILDNUMBER
      $modulefile = $Env:BUILD_SOURCESDIRECTORY+"\SnowflakePS.psd1"
      "Module file to update " + $modulefile
      $moduleContents = Get-Content -Path $modulefile;
      $moduleContents = $moduleContents -replace "ModuleVersion = '.*'", ("ModuleVersion = {0}" -f $Env:BUILD_BUILDNUMBER)
      $moduleContents | Set-Content -Path $modulefile

      Write-Host "Updated file:"
      Write-Host $moduleContents
      Write-Host "Finished"
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'SnowflakePS.csproj'
    workingDirectory: '$(Build.SourcesDirectory)'
    arguments: '/p:Configuration=$(BuildConfiguration)'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/sfsnowsight-extensions.$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/sfsnowsight-extensions.$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

